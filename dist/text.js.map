{"version":3,"sources":["text.js"],"names":["createText","client","text","fetchParams","body","fetcher","getFetcher","POST","createdText","deleteText","id","DELETE","getText","GET","listText","author","authorAccount","account","authorIdentity","identity","content","context","creationDate","creationDateMax","max","creationDateMin","min","deletionDate","deletionDateMax","deletionDateMin","owner","pagination","paginationOffset","offset","paginationSize","size","search","sort","title","appendSearchParams","listTexts"],"mappings":"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","sourcesContent":["// ============================================================\n// Functions\nasync function createText(\n    client,\n    {\n        text,\n    },\n) {\n    const fetchParams = {\n        body: text,\n    };\n\n    /** @type {Fetcher} */\n    const fetcher = client.getFetcher();\n\n    const createdText = await fetcher.POST('/text', fetchParams);\n\n    return createdText;\n}\n\nasync function deleteText(\n    client,\n    {\n        id,\n    },\n) {\n    const fetcher = client.getFetcher();\n\n    await fetcher.DELETE(`/text/${id}`);\n}\n\nasync function getText(\n    client,\n    {\n        id,\n    },\n) {\n    const fetcher = client.getFetcher();\n\n    const createdText = await fetcher.GET(`/text/${id}`);\n\n    return createdText;\n}\n\n/**\n * @returns {Text[]}\n */\nasync function listText(\n    client,\n    {\n        author: {\n            account: authorAccount,\n            identity: authorIdentity,\n        } = {},\n        content,\n        context,\n        creationDate: {\n            max: creationDateMax,\n            min: creationDateMin,\n        },\n        deletionDate: {\n            max: deletionDateMax,\n            min: deletionDateMin,\n        },\n        id,\n        owner,\n        pagination: {\n            offset: paginationOffset,\n            size: paginationSize,\n        },\n        search,\n        sort,\n        title,\n    },\n) {\n    /** @type {Fetcher} */\n    const fetcher = client.getFetcher();\n\n    fetcher.appendSearchParams('author.account.id', authorAccount);\n    fetcher.appendSearchParams('author.identity.id', authorIdentity);\n    fetcher.appendSearchParams('content', content);\n    fetcher.appendSearchParams('context.id', context);\n    fetcher.appendSearchParams('creation-date.max', creationDateMax);\n    fetcher.appendSearchParams('creation-date.min', creationDateMin);\n    fetcher.appendSearchParams('deletion-date.max', deletionDateMax);\n    fetcher.appendSearchParams('deletion-date.min', deletionDateMin);\n    fetcher.appendSearchParams('id', id);\n    fetcher.appendSearchParams('owner.id', owner);\n    fetcher.appendSearchParams('pagination.offset', paginationOffset);\n    fetcher.appendSearchParams('pagination.size', paginationSize);\n    fetcher.appendSearchParams('search', search);\n    fetcher.appendSearchParams('sort', sort);\n    fetcher.appendSearchParams('title', title);\n\n    const listTexts = await fetcher.GET('/text');\n\n    return listTexts;\n}\n\n// ============================================================\n// Exports\nexport {\n    createText as create,\n    deleteText as delete,\n    getText as get,\n    listText as list,\n};\n"],"file":"text.js"}