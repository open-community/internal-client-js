{"version":3,"sources":["Fetcher.js"],"names":["Fetcher","url","name","value","searchParams","append","path","params","fetch","method","result","code","Error404","URL"],"mappings":";;;;;;;AAEA;;AACA;;AACA;;;;;;;;;;;;;;;;;;AAEA;AACA;IACMA,O;;;AACF;;;;AAIA,mBAAYC,GAAZ,EAAiB;AAAA;;AACb,SAAKA,GAAL,GAAWA,GAAX;AACH;AAED;;;;;;;;;;uCAMmBC,I,EAAMC,K,EAAO;AAC5B,UAAI,CAACA,KAAL,EAAY;AACR;AACH;;AAED,WAAKF,GAAL,CAASG,YAAT,CAAsBC,MAAtB,CAA6BH,IAA7B,EAAmCC,KAAnC;AACH;AAED;;;;;;;;;;;+CAKaG,I,EAAMC,M;;;;;;;uBACM,KAAKC,KAAL,CAAWF,IAAX,oBACdC,MADc;AAEjBE,kBAAAA,MAAM,EAAE;AAFS,mB;;;AAAfC,gBAAAA,M;iDAKCA,M;;;;;;;;;;;;;;;;AAGX;;;;;;;;;;;;;;;;;;;;;;AAMYJ,gBAAAA,I,8DAAO,G;AAAKC,gBAAAA,M;AACdN,gBAAAA,G,GAAM,kBAAQ,KAAKA,GAAb,EAAkBK,IAAlB,C;;;uBAEa,2BAAML,GAAN,EAAWM,MAAX,C;;;AAAfG,gBAAAA,M;kDACCA,M;;;;;;sBAEH,aAAIC,IAAJ,KAAa,G;;;;;sBACP,IAAIC,iBAAJ,E;;;;;;;;;;;;;;;;;;;;;;;;gDAORN,I,EAAMC,M;;;;;;;uBACS,KAAKC,KAAL,CAAWF,IAAX,oBACdC,MADc;AAEjBE,kBAAAA,MAAM,EAAE;AAFS,mB;;;AAAfC,gBAAAA,M;kDAKCA,M;;;;;;;;;;;;;;;;AAGX;;;;;;;;6BAKS;AACL,aAAO,IAAIG,QAAJ,CAAQ,KAAKZ,GAAb,CAAP;AACH;;;;;;gDAEUK,I,EAAMC,M;;;;;;;uBACQ,KAAKC,KAAL,CAAWF,IAAX,oBACdC,MADc;AAEjBE,kBAAAA,MAAM,EAAE;AAFS,mB;;;AAAfC,gBAAAA,M;kDAKCA,M;;;;;;;;;;;;;;;;;;;;;gDAGDJ,I,EAAMC,M;;;;;;;uBACS,KAAKC,KAAL,CAAWF,IAAX,oBACdC,MADc;AAEjBE,kBAAAA,MAAM,EAAE;AAFS,mB;;;AAAfC,gBAAAA,M;kDAKCA,M;;;;;;;;;;;;;;;;;;;KAIf;AACA;;;eACeV,O","sourcesContent":["// ============================================================\n// Import packages\nimport { URL, resolve } from 'url';\nimport fetch from 'node-fetch';\nimport Error404 from './httpErrors/Error404';\n\n// ============================================================\n// Class\nclass Fetcher {\n    /**\n     *\n     * @param {URL}    url\n     */\n    constructor(url) {\n        this.url = url;\n    }\n\n    /**\n     * Add a search param to the URL.\n     * @param {string} name\n     * @param {*} value\n     * @public\n     */\n    appendSearchParams(name, value) {\n        if (!value) {\n            return;\n        }\n\n        this.url.searchParams.append(name, value);\n    }\n\n    /**\n     * Perform a a HTTP DELETE fetch.\n     * @param {string} path\n     * @param {object} params\n     */\n    async DELETE(path, params) {\n        const result = await this.fetch(path, {\n            ...params,\n            method: 'DELETE',\n        });\n\n        return result;\n    }\n\n    /**\n     * Perform a fetch\n     * @param {string} path\n     * @param {Object} params\n     * @public\n     */\n    async fetch(path = '/', params) {\n        const url = resolve(this.url, path);\n        try {\n            const result = await fetch(url, params);\n            return result;\n        } catch (err) {\n            if (err.code === 404) {\n                throw new Error404();\n            }\n\n            throw err;\n        }\n    }\n\n    async GET(path, params) {\n        const result = await this.fetch(path, {\n            ...params,\n            method: 'GET',\n        });\n\n        return result;\n    }\n\n    /**\n     * Return a new URL object\n     * @returns {URL}\n     * @public\n     */\n    getURL() {\n        return new URL(this.url);\n    }\n\n    async POST(path, params) {\n        const result = await this.fetch(path, {\n            ...params,\n            method: 'POST',\n        });\n\n        return result;\n    }\n\n    async PUT(path, params) {\n        const result = await this.fetch(path, {\n            ...params,\n            method: 'PUT',\n        });\n\n        return result;\n    }\n}\n\n// ============================================================\n// Exports\nexport default Fetcher;\n"],"file":"Fetcher.js"}