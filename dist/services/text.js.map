{"version":3,"sources":["services/text.js"],"names":["createText","client","text","fetchParams","body","POST","createdText","Error404","undefined","deleteText","id","DELETE","getText","GET","findText","author","authorAccount","account","authorIdentity","identity","content","context","creationDate","creationDateMax","max","creationDateMin","min","deletionDate","deletionDateMax","deletionDateMin","owner","pagination","paginationOffset","offset","paginationSize","size","search","sort","title","appendSearchParams","listTexts"],"mappings":"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","sourcesContent":["import Error404 from '../httpErrors/Error404';\n\n// ============================================================\n// Functions\n/**\n *\n * @param {Fetcher} client\n */\nasync function createText(\n    client,\n    {\n        text,\n    },\n) {\n    const fetchParams = {\n        body: text,\n    };\n\n    try {\n        const createdText = await client.POST('/text', fetchParams);\n        return createdText;\n    } catch (err) {\n        if (err instanceof Error404) {\n            return undefined;\n        }\n\n        throw err;\n    }\n}\n\n/**\n *\n * @param {Fetcher} client\n */\nasync function deleteText(\n    client,\n    {\n        id,\n    },\n) {\n    await client.DELETE(`/text/${id}`);\n}\n\n/**\n *\n * @param {Fetcher} client\n */\nasync function getText(\n    client,\n    {\n        id,\n    },\n) {\n    const createdText = await client.GET(`/text/${id}`);\n\n    return createdText;\n}\n\n/**\n * @param {Fetcher} client\n * @returns {Text[]}\n */\nasync function findText(\n    client,\n    {\n        author: {\n            account: authorAccount,\n            identity: authorIdentity,\n        } = {},\n        content,\n        context,\n        creationDate: {\n            max: creationDateMax,\n            min: creationDateMin,\n        },\n        deletionDate: {\n            max: deletionDateMax,\n            min: deletionDateMin,\n        },\n        id,\n        owner,\n        pagination: {\n            offset: paginationOffset,\n            size: paginationSize,\n        },\n        search,\n        sort,\n        title,\n    },\n) {\n    client.appendSearchParams('author.account.id', authorAccount);\n    client.appendSearchParams('author.identity.id', authorIdentity);\n    client.appendSearchParams('content', content);\n    client.appendSearchParams('context.id', context);\n    client.appendSearchParams('creation-date.max', creationDateMax);\n    client.appendSearchParams('creation-date.min', creationDateMin);\n    client.appendSearchParams('deletion-date.max', deletionDateMax);\n    client.appendSearchParams('deletion-date.min', deletionDateMin);\n    client.appendSearchParams('id', id);\n    client.appendSearchParams('owner.id', owner);\n    client.appendSearchParams('pagination.offset', paginationOffset);\n    client.appendSearchParams('pagination.size', paginationSize);\n    client.appendSearchParams('search', search);\n    client.appendSearchParams('sort', sort);\n    client.appendSearchParams('title', title);\n\n    const listTexts = await client.GET('/text');\n\n    return listTexts;\n}\n\n// ============================================================\n// Exports\nexport {\n    createText as create,\n    deleteText as delete,\n    getText as get,\n    findText as find,\n};\n"],"file":"text.js"}