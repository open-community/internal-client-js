{"version":3,"sources":["services/text.js"],"names":["createText","client","text","fetchParams","body","createdText","POST","err","Error404","undefined","deleteText","id","DELETE","getText","GET","findText","author","account","authorAccount","identity","authorIdentity","content","context","creationDate","max","creationDateMax","min","creationDateMin","deletionDate","deletionDateMax","deletionDateMin","owner","pagination","offset","paginationOffset","size","paginationSize","search","sort","title","appendSearchParams","listTexts"],"mappings":";;;;;;;;;;AAAA;;;;AAEA;AACA;;AACA;;;;AAIA,eAAeA,UAAf,CACIC,MADJ,EAEI;AACIC,EAAAA;AADJ,CAFJ,EAKE;AACE,QAAMC,WAAW,GAAG;AAChBC,IAAAA,IAAI,EAAEF;AADU,GAApB;;AAIA,MAAI;AACA,UAAMG,WAAW,GAAG,MAAMJ,MAAM,CAACK,IAAP,CAAY,OAAZ,EAAqBH,WAArB,CAA1B;AACA,WAAOE,WAAP;AACH,GAHD,CAGE,OAAOE,GAAP,EAAY;AACV,QAAIA,GAAG,YAAYC,cAAnB,EAA6B;AACzB,aAAOC,SAAP;AACH;;AAED,UAAMF,GAAN;AACH;AACJ;AAED;;;;;;AAIA,eAAeG,UAAf,CACIT,MADJ,EAEI;AACIU,EAAAA;AADJ,CAFJ,EAKE;AACE,QAAMV,MAAM,CAACW,MAAP,CAAe,SAAQD,EAAG,EAA1B,CAAN;AACH;AAED;;;;;;AAIA,eAAeE,OAAf,CACIZ,MADJ,EAEI;AACIU,EAAAA;AADJ,CAFJ,EAKE;AACE,QAAMN,WAAW,GAAG,MAAMJ,MAAM,CAACa,GAAP,CAAY,SAAQH,EAAG,EAAvB,CAA1B;AAEA,SAAON,WAAP;AACH;AAED;;;;;;AAIA,eAAeU,QAAf,CACId,MADJ,EAEI;AACIe,EAAAA,MAAM,EAAE;AACJC,IAAAA,OAAO,EAAEC,aADL;AAEJC,IAAAA,QAAQ,EAAEC;AAFN,MAGJ,EAJR;AAKIC,EAAAA,OALJ;AAMIC,EAAAA,OANJ;AAOIC,EAAAA,YAAY,EAAE;AACVC,IAAAA,GAAG,EAAEC,eADK;AAEVC,IAAAA,GAAG,EAAEC;AAFK,GAPlB;AAWIC,EAAAA,YAAY,EAAE;AACVJ,IAAAA,GAAG,EAAEK,eADK;AAEVH,IAAAA,GAAG,EAAEI;AAFK,GAXlB;AAeInB,EAAAA,EAfJ;AAgBIoB,EAAAA,KAhBJ;AAiBIC,EAAAA,UAAU,EAAE;AACRC,IAAAA,MAAM,EAAEC,gBADA;AAERC,IAAAA,IAAI,EAAEC;AAFE,GAjBhB;AAqBIC,EAAAA,MArBJ;AAsBIC,EAAAA,IAtBJ;AAuBIC,EAAAA;AAvBJ,CAFJ,EA2BE;AACEtC,EAAAA,MAAM,CAACuC,kBAAP,CAA0B,mBAA1B,EAA+CtB,aAA/C;AACAjB,EAAAA,MAAM,CAACuC,kBAAP,CAA0B,oBAA1B,EAAgDpB,cAAhD;AACAnB,EAAAA,MAAM,CAACuC,kBAAP,CAA0B,SAA1B,EAAqCnB,OAArC;AACApB,EAAAA,MAAM,CAACuC,kBAAP,CAA0B,YAA1B,EAAwClB,OAAxC;AACArB,EAAAA,MAAM,CAACuC,kBAAP,CAA0B,mBAA1B,EAA+Cf,eAA/C;AACAxB,EAAAA,MAAM,CAACuC,kBAAP,CAA0B,mBAA1B,EAA+Cb,eAA/C;AACA1B,EAAAA,MAAM,CAACuC,kBAAP,CAA0B,mBAA1B,EAA+CX,eAA/C;AACA5B,EAAAA,MAAM,CAACuC,kBAAP,CAA0B,mBAA1B,EAA+CV,eAA/C;AACA7B,EAAAA,MAAM,CAACuC,kBAAP,CAA0B,IAA1B,EAAgC7B,EAAhC;AACAV,EAAAA,MAAM,CAACuC,kBAAP,CAA0B,UAA1B,EAAsCT,KAAtC;AACA9B,EAAAA,MAAM,CAACuC,kBAAP,CAA0B,mBAA1B,EAA+CN,gBAA/C;AACAjC,EAAAA,MAAM,CAACuC,kBAAP,CAA0B,iBAA1B,EAA6CJ,cAA7C;AACAnC,EAAAA,MAAM,CAACuC,kBAAP,CAA0B,QAA1B,EAAoCH,MAApC;AACApC,EAAAA,MAAM,CAACuC,kBAAP,CAA0B,MAA1B,EAAkCF,IAAlC;AACArC,EAAAA,MAAM,CAACuC,kBAAP,CAA0B,OAA1B,EAAmCD,KAAnC;AAEA,QAAME,SAAS,GAAG,MAAMxC,MAAM,CAACa,GAAP,CAAW,OAAX,CAAxB;AAEA,SAAO2B,SAAP;AACH,C,CAED;AACA","sourcesContent":["import Error404 from '../httpErrors/Error404';\n\n// ============================================================\n// Functions\n/**\n *\n * @param {Fetcher} client\n */\nasync function createText(\n    client,\n    {\n        text,\n    },\n) {\n    const fetchParams = {\n        body: text,\n    };\n\n    try {\n        const createdText = await client.POST('/text', fetchParams);\n        return createdText;\n    } catch (err) {\n        if (err instanceof Error404) {\n            return undefined;\n        }\n\n        throw err;\n    }\n}\n\n/**\n *\n * @param {Fetcher} client\n */\nasync function deleteText(\n    client,\n    {\n        id,\n    },\n) {\n    await client.DELETE(`/text/${id}`);\n}\n\n/**\n *\n * @param {Fetcher} client\n */\nasync function getText(\n    client,\n    {\n        id,\n    },\n) {\n    const createdText = await client.GET(`/text/${id}`);\n\n    return createdText;\n}\n\n/**\n * @param {Fetcher} client\n * @returns {Text[]}\n */\nasync function findText(\n    client,\n    {\n        author: {\n            account: authorAccount,\n            identity: authorIdentity,\n        } = {},\n        content,\n        context,\n        creationDate: {\n            max: creationDateMax,\n            min: creationDateMin,\n        },\n        deletionDate: {\n            max: deletionDateMax,\n            min: deletionDateMin,\n        },\n        id,\n        owner,\n        pagination: {\n            offset: paginationOffset,\n            size: paginationSize,\n        },\n        search,\n        sort,\n        title,\n    },\n) {\n    client.appendSearchParams('author.account.id', authorAccount);\n    client.appendSearchParams('author.identity.id', authorIdentity);\n    client.appendSearchParams('content', content);\n    client.appendSearchParams('context.id', context);\n    client.appendSearchParams('creation-date.max', creationDateMax);\n    client.appendSearchParams('creation-date.min', creationDateMin);\n    client.appendSearchParams('deletion-date.max', deletionDateMax);\n    client.appendSearchParams('deletion-date.min', deletionDateMin);\n    client.appendSearchParams('id', id);\n    client.appendSearchParams('owner.id', owner);\n    client.appendSearchParams('pagination.offset', paginationOffset);\n    client.appendSearchParams('pagination.size', paginationSize);\n    client.appendSearchParams('search', search);\n    client.appendSearchParams('sort', sort);\n    client.appendSearchParams('title', title);\n\n    const listTexts = await client.GET('/text');\n\n    return listTexts;\n}\n\n// ============================================================\n// Exports\nexport {\n    createText as create,\n    deleteText as delete,\n    getText as get,\n    findText as find,\n};\n"],"file":"text.js"}