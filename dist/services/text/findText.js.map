{"version":3,"sources":["services/text/findText.js"],"names":["findText","client","offset","paginationOffset","filters","cache","size","initialCacheSize","fetch","fetchSize","quantity","initialQuantity","prepareClient","appendSearchParams","list","total","GET","IteratorCache","callback","setSearchParam","returnList","Number","isInteger","initialData","remaining","currentList","get","length","returnObject","params","nextQuantity","nextCacheSize","pagination","nextPaginationSize","setSize","author","account","authorAccount","identity","authorIdentity","content","context","creationDate","max","creationDateMax","min","creationDateMin","deletionDate","deletionDateMax","deletionDateMin","id","owner","search","title","sort"],"mappings":"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","sourcesContent":["// ============================================================\n// Import modules\nimport { IteratorCache } from '../../helpers';\n\n// ============================================================\n// Functions\n\n/**\n * @typedef {Object} FindResult.<T>\n * @property {Array.<T>} list - List of elements\n * @property {number} remaining - Remaining number of elements to return\n * @property {number} total - Total number of elements to expect in the list\n */\n\n/**\n * @typedef {Object} FindParamsObject\n * @property {number} quantity   - Quantity of elements to return\n * @property {Object} cache      - Cache settings\n * @property {number} cache.size - Number of elements that should be cached\n * @property {Object} fetch      - Fetch settings\n * @property {Object} fetch.pagination - Fetch pagination settings\n * @property {number} fetch.pagination.size - Size of the fetch pagination\n */\n\n/**\n * @param {Fetcher}    client\n * @param {number}     offset\n * @param {TextFilter} filters\n * @returns {Iterator.<FindResult.<Text>, FindParams>}\n */\nasync function* findText(\n    client,\n    {\n        offset: paginationOffset,\n        ...filters\n    } = {},\n    {\n        cache: {\n            size: initialCacheSize,\n        } = {},\n        fetch: {\n            size: fetchSize = 10,\n        } = {},\n        quantity: initialQuantity = 10,\n    } = {},\n) {\n    // Adding filters to the client search params\n    prepareClient(client, filters);\n\n    client.appendSearchParams('pagination.size', fetchSize);\n    client.appendSearchParams('pagination.offset', paginationOffset);\n\n    // Fetching initial data\n    const { list, total } = await client.GET('/text');\n\n    // Building the cache\n    const cache = new IteratorCache(\n        {\n            callback: async (offset) => {\n                client.setSearchParam('pagination.offset', paginationOffset + offset);\n\n                const { list: returnList } = await client.GET('/text');\n                return returnList;\n            },\n            size: Number.isInteger(initialCacheSize) ? initialCacheSize : 2 * fetchSize,\n            initialData: list,\n            total,\n        },\n    );\n\n    let remaining = total - paginationOffset;\n    let quantity = initialQuantity;\n\n    while (true) {\n        // eslint-disable-next-line no-await-in-loop\n        const currentList = await cache.get(quantity);\n        remaining -= list.length;\n\n        const returnObject = {\n            list: currentList,\n            remaining,\n            total,\n        };\n\n        if (remaining <= 0) {\n            return returnObject;\n        }\n\n        const params = yield returnObject;\n\n        if (typeof params === 'number') {\n            quantity = params;\n        }\n\n        if (typeof params === 'object') {\n            const {\n                quantity: nextQuantity,\n                cache: {\n                    size: nextCacheSize,\n                } = {},\n                pagination: {\n                    size: nextPaginationSize,\n                } = {},\n            } = params;\n\n            // Setting quantity\n            if (Number.isInteger(nextQuantity) && nextQuantity > 0) {\n                quantity = nextQuantity;\n            }\n\n            // Pagination size\n            if (Number.isInteger(nextPaginationSize) && nextPaginationSize > 0) {\n                client.setSearchParam('pagination.size', fetchSize);\n            }\n\n            // Cache size. Note that since the cache will be filled, it is important that\n            // the pagination size value has been updated before this step.\n            if (Number.isInteger(nextCacheSize) && nextCacheSize > 0) {\n                cache.setSize(nextCacheSize);\n            }\n        }\n    }\n}\n\n/**\n *\n * @param {Client} client\n * @param {TextFilter} filters\n * @private\n */\nfunction prepareClient(client, filters) {\n    const {\n        author: {\n            account: authorAccount,\n            identity: authorIdentity,\n        } = {},\n        content,\n        context,\n        creationDate: {\n            max: creationDateMax,\n            min: creationDateMin,\n        } = {},\n        deletionDate: {\n            max: deletionDateMax,\n            min: deletionDateMin,\n        } = {},\n        id,\n        owner,\n        search,\n        title,\n        sort,\n    } = filters;\n\n    client.appendSearchParams('author.account.id', authorAccount);\n    client.appendSearchParams('author.identity.id', authorIdentity);\n    client.appendSearchParams('content', content);\n    client.appendSearchParams('context.id', context);\n    client.appendSearchParams('creation-date.max', creationDateMax);\n    client.appendSearchParams('creation-date.min', creationDateMin);\n    client.appendSearchParams('deletion-date.max', deletionDateMax);\n    client.appendSearchParams('deletion-date.min', deletionDateMin);\n    client.appendSearchParams('id', id);\n    client.appendSearchParams('owner.id', owner);\n    client.appendSearchParams('search', search);\n    client.appendSearchParams('sort', sort);\n    client.appendSearchParams('title', title);\n}\n\n// ============================================================\n// JsDoc\n\n/**\n * @typedef {Object} TextFilter\n * @property {Object}   author\n * @property {ApiID}    author.account - ID of the authors accounts\n * @property {ApiID}    author.identity - ID of the author identity\n * @property {string[]} content\n * @property {ApiID[]}  context\n * @property {Object}   creationDate\n * @property {Date}     creationDate.min\n * @property {Date}     creationDate.max\n * @property {Object}   deletionDate\n * @property {Date}     deletionDate.max\n * @property {Date}     deletionDate.min\n * @property {ApiID[]}  id\n * @property {ApiID[]}  owner - ID of the owner accounts\n * @property {string[]} search\n * @property {string[]} title\n * @property {string}   sort\n */\n\n// ============================================================\n// Exports\nexport {\n    findText,\n    prepareClient,\n};\n"],"file":"findText.js"}