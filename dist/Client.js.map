{"version":3,"sources":["Client.js"],"names":["Client","url","path","params","result","Fetcher","URL","prototype","text","Object","fromEntries","entries","map","name","fct","bind","undefined"],"mappings":";;;;;;;AAEA;;AACA;;AAIA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;IACMA,M;;;AACF;;;;AAIA,kBAAYC,GAAZ,EAAiB;AAAA;;AACb,SAAKA,GAAL,GAAWA,GAAX;AACH;AAED;;;;;;;;;;;;;;;;;;;;;;;AAMYC,gBAAAA,I,2DAAO,G;AAAKC,gBAAAA,M;AACdF,gBAAAA,G,GAAM,kBAAQ,KAAKA,GAAb,EAAkBC,IAAlB,C;;uBACS,2BAAMD,GAAN,EAAWE,MAAX,C;;;AAAfC,gBAAAA,M;iDACCA,M;;;;;;;;;;;;;;;;AAGX;;;;;;;oCAIgB;AACZ,aAAO,IAAIC,mBAAJ,CAAY,IAAZ,CAAP;AACH;AAED;;;;;;;;6BAKS;AACL,aAAO,IAAIC,QAAJ,CAAQ,KAAKL,GAAb,CAAP;AACH;;;;;;AAGLD,MAAM,CAACO,SAAP,CAAiBC,IAAjB,GAAwBC,MAAM,CAACC,WAAP,CACpBD,MAAM,CAACE,OAAP,CAAeH,IAAf,EAAqBI,GAArB,CAAyB,SAASA,GAAT,OAA0B;AAAA;AAAA,MAAZC,IAAY;AAAA,MAANC,GAAM;;AAC/C,SAAO,CACHD,IADG,EAEHC,GAAG,CAACC,IAAJ,CAASC,SAAT,EAAoB,IAApB,CAFG,CAAP;AAIH,CALD,CADoB,CAAxB,C,CASA;AACA;;eACehB,M","sourcesContent":["// ============================================================\n// Import packages\nimport { URL, resolve } from 'url';\nimport fetch from 'node-fetch';\n\n// ============================================================\n// Import modules\nimport Fetcher from './Fetcher';\nimport * as text from './text';\n\n// ============================================================\n// Class\nclass Client {\n    /**\n     * @param {URL} url\n     * @public\n     */\n    constructor(url) {\n        this.url = url;\n    }\n\n    /**\n     * Perform a fetch\n     * @param {string} path\n     * @param {Object} params\n     * @public\n     */\n    async fetch(path = '/', params) {\n        const url = resolve(this.url, path);\n        const result = await fetch(url, params);\n        return result;\n    }\n\n    /**\n     * @returns {Fetcher}\n     * @public\n     */\n    getNewFetcher() {\n        return new Fetcher(this);\n    }\n\n    /**\n     * Return a new URL object\n     * @returns {URL}\n     * @public\n     */\n    getURL() {\n        return new URL(this.url);\n    }\n}\n\nClient.prototype.text = Object.fromEntries(\n    Object.entries(text).map(function map([name, fct]) {\n        return [\n            name,\n            fct.bind(undefined, this),\n        ];\n    }),\n);\n\n// ============================================================\n// Exports\nexport default Client;\n"],"file":"Client.js"}